{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","_angular_core__WEBPACK_IMPORTED_MODULE_0__","SlideToConfirmComponent","event","previousContainer","container","isConfirmed","opacity","confirm","emit","percentageSuccess","percentage","resetAll","calculatePercetage","distance","x","document","getElementById","clientWidth","delta","a","b","selectors","inputs","color","backgroundColor","placeHolder","successText","confirmedIcon","reset","outputs","resetEvent","decls","vars","consts","template","ctx","SlideToConfirmModule","_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","declarations","_slide_to_confirm_component__WEBPACK_IMPORTED_MODULE_0__","imports","exports","SlideToConfirmService","factory","providedIn","AppComponent","_angular_core__WEBPACK_IMPORTED_MODULE_1__","routes","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_0__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","projects_slide_to_confirm_src_public_api__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///projects/slide-to-confirm/src/lib/slide-to-confirm.component.html","webpack:///projects/slide-to-confirm/src/lib/slide-to-confirm.component.ts","webpack:///projects/slide-to-confirm/src/lib/slide-to-confirm.module.ts","webpack:///projects/slide-to-confirm/src/lib/slide-to-confirm.service.ts","webpack:///projects/slide-to-confirm/src/public-api.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<div id=\"slide-to-confirm-wrapper\" class=\"slide-to-confirm-wrapper\"\n  [style.background]=\"'linear-gradient(90deg, ' + backgroundColor + ' ' + percentageSuccess + '%, ' + color + ' ' + percentage + '%)'\">\n  <div class=\"slide-to-hint-text\">\n\n    <span *ngIf=\"!isConfirmed\"  [style.opacity]='opacity'>{{ placeHolder }} </span>\n    <span  *ngIf=\"isConfirmed\" >{{ successText }} </span>\n  </div>\n\n  <div class=\"slide-to-confirm-boundry-wrapper\">\n    <ng-container cdkDropListGroup>\n      <!-- Drag Source -->\n      <div class=\"slide-to-confirm-source\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n\n        <!-- Drag Handle -->\n        <div class=\"slide-to-confirm-handle\" cdkDrag cdkDragLockAxis=\"x\" (cdkDragMoved)='handleMove($event)'\n          cdkDragBoundary=\".slide-to-confirm-boundry-wrapper\" *ngIf='!isConfirmed'>\n          <span class='slide-to-icon'>&#10095;</span>\n          <!-- <div *cdkDragPreview >\n                    <h1> Confirmed</h1>\n                  </div> -->\n        </div>\n\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <!-- Drag Target -->\n      <div class=\"slide-to-confirm-target\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n        <!-- Drag Handle -->\n        <div class=\"slide-to-confirm-handle\" *ngIf='isConfirmed'>\n          <span class='slide-to-icon'>{{ confirmedIcon }}</span>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","import { CdkDragDrop, CdkDragMove } from '@angular/cdk/drag-drop';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-slide-to-confirm',\n  templateUrl: './slide-to-confirm.component.html',\n  styleUrls: ['slide-to-confirm.component.scss']\n})\nexport class SlideToConfirmComponent implements OnInit {\n\n  @Input() color: string = 'rgba(0,212,255,1) ';\n  @Input() backgroundColor: string = 'rgb(24, 201, 98)';\n  @Input() placeHolder = 'Swipe To Confirm';\n  @Input() class = '';\n  @Input() successText = 'Confirmed';\n  @Input() confirmedIcon = 'âœ“';\n\n  @Input() reset = false;\n\n  @Output() confirm = new EventEmitter<void>();\n  @Output() resetEvent = new EventEmitter<void>();\n\n  isConfirmed = false;\n  opacity = 1;\n  percentage = 0\n  percentageSuccess = 0\n\n\n  constructor() { }\n  ngOnInit() {\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer !== event.container) {\n      this.isConfirmed = true;\n\n      this.opacity = 0;\n      this.confirm.emit();\n      this.percentageSuccess = 100;\n    } else {\n      this.percentage = 0;\n      this.percentageSuccess = 0;\n      this.resetAll();\n    }\n  }\n\n  resetAll() {\n    this.isConfirmed = false;\n    this.opacity = 1;\n    this.percentage = 0;\n    this.percentageSuccess = 0;\n  }\n\n  handleMove(event: CdkDragMove) {\n    this.percentage = this.calculatePercetage(event.distance.x, document.getElementById(\"slide-to-confirm-wrapper\").clientWidth - 64);\n    this.percentageSuccess = this.calculatePercetage(event.distance.x - 64, document.getElementById(\"slide-to-confirm-wrapper\").clientWidth - 64);\n\n    if (this.opacity >= 0 && this.opacity <= 1) {\n      if (event.delta.x === 1) {\n        this.opacity -= 0.01;\n      } else if (event.delta.x === -1) {\n        this.opacity += 0.01;\n      }\n    }\n  }\n  calculatePercetage(a, b) {\n    return (a / b) * 100;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SlideToConfirmComponent } from './slide-to-confirm.component';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [SlideToConfirmComponent],\n  imports: [\n    DragDropModule,\n    CommonModule\n  ],\n  exports: [SlideToConfirmComponent]\n})\nexport class SlideToConfirmModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlideToConfirmService {\n\n  constructor() { }\n}\n","/*\n * Public API Surface of slide-to-confirm\n */\n\nexport * from './lib/slide-to-confirm.service';\nexport * from './lib/slide-to-confirm.component';\nexport * from './lib/slide-to-confirm.module';\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'NgxSlideToConfirm';\n}\n","\n<ngx-slide-to-confirm></ngx-slide-to-confirm>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SlideToConfirmModule } from 'projects/slide-to-confirm/src/public-api';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SlideToConfirmModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}